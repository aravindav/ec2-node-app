---
- name: Configure and Deploy Node.js Application
  hosts: app
  become: true

  vars:
    # This now correctly matches your Jenkins and server environment
    node_major_version: "18"
    app_path: "/home/ubuntu/node-app" # Using the original path from your playbook

  tasks:
    - name: Update APT package cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install dependencies for adding new repositories
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
        state: present

    # This new task creates the directory for GPG keys, fixing the error.
    - name: Create /etc/apt/keyrings directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Get NodeSource GPG key
      ansible.builtin.get_url:
        url: https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key
        dest: /etc/apt/keyrings/nodesource.gpg
        mode: '0644'

    - name: Add NodeSource repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_{{ node_major_version }}.x nodistro main"
        state: present
        update_cache: yes

    - name: Install Node.js from NodeSource
      ansible.builtin.apt:
        name: nodejs
        state: present

    # NOTE: The task below copies source code. For even better reliability,
    # consider the "Build Artifact" model discussed, using 'unarchive' instead.
    - name: Copy application files to the server
      ansible.builtin.synchronize:
        src: ../
        dest: "{{ app_path }}"
        recursive: yes
        delete: yes
        rsync_opts:
          - "--exclude=.git"
          - "--exclude=ansible"
          - "--exclude=node_modules"
      notify: Restart node app # This tells the handler to run if files change

    - name: Install application dependencies
      ansible.builtin.npm:
        path: "{{ app_path }}"
      become_user: ubuntu # Secure: runs npm install as the 'ubuntu' user

    - name: Copy systemd service file
      ansible.builtin.copy:
        src: node-app.service # Assumes this file is in the same dir as the playbook
        dest: /etc/systemd/system/node-app.service
        owner: root
        group: root
        mode: '0644'
      notify: Restart node app # Also restarts the app if the service definition changes

    - name: Ensure service is started and enabled on boot
      ansible.builtin.systemd:
        name: node-app
        enabled: yes
        state: restarted
        daemon_reload: yes

# Handlers are special tasks that only run when "notified" by another task.
# This block should be at the end of the playbook, at the same indentation level as 'hosts' and 'tasks'.
# handlers:
#   - name: Restart node app
#     ansible.builtin.systemd:
#       name: node-app
#       state: restarted
#       daemon_reload: yes # Reloads systemd to pick up changes in the service file
